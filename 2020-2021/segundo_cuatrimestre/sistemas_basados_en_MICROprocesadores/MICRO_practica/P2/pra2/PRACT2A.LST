Turbo Assembler	 Version 2.0	    04/01/21 15:59:04	    Page 1
pract2a.asm



      1				     ; Autor: Junco de las Heras Valenzuela junco.heras@estudiante.uam.es
      2				     ; Grupo 2301 Doble	Grado.
      3				     ; Práctica 2, ejercicio a
      4
      5				     ; DEFINICION DEL SEGMENTO DE DATOS
      6	0000			     DATOS SEGMENT
      7					     ; DEFINICION DE LOS VECTORES
      8	0000  01 02 02 04		     vector1 db	1,2,2,4
      9	0004  04 02 05 01		     vector2 db	4,2,5,1
     10	0008  03 02 04 01		     vector3 db	3,2,4,1
     11	000C  46 55 45 52 41 20	44+	     errorNumDif DB "FUERA DEL CONJUNTO: 1,2,3,4", 13, 10, '$'
     12	      45 4C 20 43 4F 4E	4A+
     13	      55 4E 54 4F 3A 20	31+
     14	      2C 32 2C 33 2C 34	0D+
     15	      0A 24
     16	002A  43 4F 52 52 45 43	54+	     salidaCorrecta DB "CORRECTO", 13, 10, '$'
     17	      4F 0D 0A 24
     18	0035			     DATOS ENDS
     19
     20				     ;**************************************************************************
     21				     ; DEFINICION DEL SEGMENTO DE PILA
     22	0000			     PILA SEGMENT STACK	"STACK"
     23	0000  40*(00)			     DB	40H DUP	(0) ;ejemplo de	inicialización, 64 bytes inicializados	a 0
     24	0040			     PILA ENDS
     25				     ;**************************************************************************
     26				     ; DEFINICION DEL SEGMENTO EXTRA
     27	0000			     EXTRA SEGMENT
     28	0000  0000 0000			     RESULT DW 0,0 ;ejemplo de inicialización.	2 PALABRAS (4 BYTES)
     29	0004			     EXTRA ENDS
     30				     ;**************************************************************************
     31				     ; DEFINICION DEL SEGMENTO DE CODIGO
     32	0000			     CODE SEGMENT
     33					     ASSUME CS:	CODE, DS: DATOS, ES: EXTRA, SS:	PILA
     34					     ; COMIENZO	DEL PROCEDIMIENTO PRINCIPAL
     35	0000				     INICIO PROC
     36						     ; INICIALIZA LOS REGISTROS	DE SEGMENTO CON	SU VALOR
     37	0000  B8 0000s				     MOV AX, DATOS
     38	0003  8E D8				     MOV DS, AX
     39	0005  B8 0000s				     MOV AX, PILA
     40	0008  8E D0				     MOV SS, AX
     41	000A  B8 0000s				     MOV AX, EXTRA
     42	000D  8E C0				     MOV ES, AX
     43	000F  BC 0040				     MOV SP, 64	; CARGA	EL PUNTERO DE PILA CON EL VALOR	MAS ALTO
     44						     ; FIN DE LAS INICIALIZACIONES
     45						     ; COMIENZO	DEL PROGRAMA
     46
     47	0012  BB 0000r				     MOV BX, OFFSET vector1
     48	0015  E8 0011				     CALL IN_OUT ; Procesa el vector1.
     49
     50	0018  BB 0004r				     MOV BX, OFFSET vector2
     51	001B  E8 000B				     CALL IN_OUT ; Procesa el vector2.
     52
     53	001E  BB 0008r				     MOV BX, OFFSET vector3
     54	0021  E8 0005				     CALL IN_OUT ; Procesa el vector3.
     55
     56						     ; FIN DEL PROGRAMA
     57	0024  B8 4C00				     MOV AX, 4C00H
Turbo Assembler	 Version 2.0	    04/01/21 15:59:04	    Page 2
pract2a.asm



     58	0027  CD 21				     INT 21H
     59
     60	0029				     INICIO ENDP
     61					     ;ESPACIO PARA SUBRUTINAS
     62					     ; Escribe salidaCorrecta si los numeros del vector
     63					     ; con base	en BX pertenecen al [1,	4], sino errorNumDif.
     64	0029				     IN_OUT PROC
     65	0029  B9 0004				     MOV CX, 4 ; El vector tiene dimension 4.
     66
     67	002C					     BUCLE_IN_OUT:
     68	002C  8B F1				     MOV SI, CX
     69	002E  8A 40 FF				     MOV AL, BYTE PTR [BX][SI-1] ; Procesa los numeros de uno en uno.
     70	0031  3C 04				     CMP AL, 4
     71	0033  7F 05				     JG	INVALID	; Si AL	> 4 es INVALID.
     72	0035  49				     DEC CX
     73	0036  E3 0A				     JCXZ VALID	; Si ha	procesado los 4	numeros	es VALID
     74	0038  EB F2				     JMP BUCLE_IN_OUT ;	Repite bucle.
     75
     76
     77	003A					     INVALID: ;	Imprime	errorNumDif.
     78	003A  B4 09				     MOV AH, 09H
     79	003C  BA 000Cr				     MOV DX, OFFSET errorNumDif
     80	003F  CD 21				     INT 21H
     81
     82	0041  C3				     RET
     83
     84	0042					     VALID: ; Imprime salidaCorrecta.
     85	0042  B4 09				     MOV AH, 09H
     86	0044  BA 002Ar				     MOV DX, OFFSET salidaCorrecta
     87	0047  CD 21				     INT 21H
     88
     89	0049  C3				     RET
     90
     91	004A				     ENDP IN_OUT
     92
     93
     94
     95				     ; FIN DEL SEGMENTO	DE CODIGO
     96	004A			     CODE ENDS
     97				     ; FIN DEL PROGRAMA	INDICANDO DONDE	COMIENZA LA EJECUCION
     98				     END INICIO
Turbo Assembler	 Version 2.0	    04/01/21 15:59:04	    Page 3
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "04/01/21"
??FILENAME			  Text	 "pract2a "
??TIME				  Text	 "15:59:04"
??VERSION			  Number 0200
@CPU				  Text	 0101H
@CURSEG				  Text	 CODE
@FILENAME			  Text	 PRACT2A
@WORDSIZE			  Text	 2
BUCLE_IN_OUT			  Near	 CODE:002C
ERRORNUMDIF			  Byte	 DATOS:000C
INICIO				  Near	 CODE:0000
INVALID				  Near	 CODE:003A
IN_OUT				  Near	 CODE:0029
RESULT				  Word	 EXTRA:0000
SALIDACORRECTA			  Byte	 DATOS:002A
VALID				  Near	 CODE:0042
VECTOR1				  Byte	 DATOS:0000
VECTOR2				  Byte	 DATOS:0004
VECTOR3				  Byte	 DATOS:0008

Groups & Segments		  Bit Size Align  Combine Class

CODE				  16  004A Para	  none
DATOS				  16  0035 Para	  none
EXTRA				  16  0004 Para	  none
PILA				  16  0040 Para	  Stack	  STACK
